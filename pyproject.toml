[build-system]
# hatchling v1.27 was first version to use default metadata version 2.4, allowing project.license
# and project.license-files fields following PEP-639
requires = ["hatchling>=1.27", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.build]
exclude = [
  "/.*",
  "/docs",
  "/examples",
  "/requirements",
  "/tools",
]

[tool.hatch.version]
source = "vcs"
fallback-version = "1.2.0.post1.dev0"

[tool.hatch.version.raw-options]
version_scheme = "no-guess-dev"

[tool.hatch.build.hooks.vcs]
version-file = "pybaselines/_version.py"


[project]
name = "pybaselines"
dynamic = ["version"]
authors = [
    {name = "Donald Erb", email = "donnie.erb@gmail.com"},
]
description = "A library of algorithms for the baseline correction of experimental data."
readme = "README.rst"
license = "BSD-3-Clause"
license-files = [
    "LICENSE.txt",
    "LICENSES_bundled.txt"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Chemistry",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Scientific/Engineering :: Physics",
]
keywords = [
    "materials characterization",
    "materials science",
    "baseline",
    "background",
    "baseline correction",
    "baseline subtraction",
    "chemistry",
    "spectroscopy",
    "raman",
]
requires-python = ">=3.9"
dependencies = [
    "numpy>=1.20",  # lowest version to allow dtype for np.concatenate
    "scipy>=1.6",  # lowest version supported for python 3.9
]

[project.urls]
Homepage = "https://github.com/derb12/pybaselines"
Documentation = "https://pybaselines.readthedocs.io"

[project.optional-dependencies]
full = [
    "pentapy>=1.1",  # 1.1.1 is first version with wheels for python 3.9; don't pin patch versions
    "numba>=0.53",  # first to allow usage with python 3.9
]
test = [
    "pytest>=6.0",  # first version to work with pyproject.toml
    "ruff",
]
docs = [
    "sphinx",
    "sphinx-copybutton",
    "sphinx-gallery>=0.16", # first version allowing strings to specify gallery sorting
    "sphinx-rtd-theme",
    "matplotlib",
    "numpydoc",
]
release = [
    "build",
    "bump-my-version",
    "twine",
]
dev = ["pybaselines[full, docs, test, release]"]


[tool.pytest.ini_options]
addopts = "--strict-markers"
markers = [
    "threaded_test: mark a test as using threading and only run on free-threaded CPython by default",
]


[tool.isort]
skip_glob = ["docs/*", "*__init__.py"]
force_sort_within_sections = true
line_length = 100
lines_after_imports = 2
multi_line_output = 5
src_paths = ["pybaselines", "tests"]
# example_helpers are locally used in doc examples
known_local_folder = ["example_helpers"]

[tool.ruff]
exclude = ["docs/conf.py"]
line-length = 100
fix = false
output-format = "full"

[tool.ruff.lint]
preview = true  # for using experimental rules
select = [
    "B",  # flake8-bugbear
    "D",  # pydocstyle
    "E",  # pycodestyle errors
    "F",  # pyflakes
    #"I",  # isort
    "W",  # pycodestyle warnings
    "C4",  # flake8-comprehensions
    "NPY",  # numpy specific
]
ignore = [
    "D401",  # D401 first line should be in imperative mood; try rephrasing
    "E731",  # E731 do not assign a lambda expression, use a def
]
task-tags = ["TODO"]

[tool.ruff.lint.pycodestyle]
ignore-overlong-task-comments = true

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = [
    "F401",  # F401: module imported but unused
    "D205",  # D205: 1 blank line required between summary line and description

]
"docs/examples/*" = [
    "B007",  # B007: Loop control variable `name` not used within loop body; want to be explicit in examples
    "D205",  # D205: 1 blank line required between summary line and description
    "D400",  # D400: first line should end with a period
    "E501",  # E501: line too long; reference links can be very long so ignore the limit
]
"tests/*" = [
    "F841",  # F841: Local variable 'name' is assigned to but never used; want to be explicit within tests
]


[tool.bumpversion]
current_version = "1.2.0"
commit = false
tag = false
message = "Bump version: {current_version} -> {new_version}"

[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = "version = \"{current_version}\""
replace = "version = \"{new_version}\""

[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = "fallback-version = \"{current_version}.post1.dev0\""
replace = "fallback-version = \"{new_version}.post1.dev0\""

[[tool.bumpversion.files]]
filename = "pybaselines/__init__.py"
search = "__version__ = '{current_version}.post1.dev0'"
replace = "__version__ = '{new_version}.post1.dev0'"

[[tool.bumpversion.files]]
filename = "CITATION.cff"
search = "version: {current_version}"
replace = "version: {new_version}"
